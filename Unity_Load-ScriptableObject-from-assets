//doesn't work well on mobile for a solution check Unity_Load-ScriptableObject-from-assets2

//You can load a ScriptableObject directly from the folders and save it to a variable
//In this example the ScriptableObject is loaded and stored in a variable when another script tries get a script using the Singleton method

public class Collectables
{
  private static  Collectable[] collectables;
  
  //Singleton
  private static Collectables _instance = null;
  public static Collectables Instance {
	get{
	    if (_instance == null)
		{
		    _instance = new Collectables();

		    //Here the load is done
		    collectables = Resources.FindObjectsOfTypeAll(typeof(Collectable)) as Collectable[];
		}
	    return _instance;
	    } 
	}
    
   void Start()
   {
    
   }
   
}



//We can simplify using a constructor method that will be called when executing the "new Collectables()".


public class Collectables
{
  private static  Collectable[] collectables;
  
  private static Collectables _instance = null;
  public static Collectables Instance {
	get{
	    if (_instance == null)
		{
				//here the constructor is called
		    _instance = new Collectables();
		}
	    return _instance;
	    } 
	}


   //constructor method
   private Collectables()
   {
   	//Resources.FindObjectsOfTypeAll only works on loader objects, so we load them all before
	Resources.LoadAll("Scripts/Collectables/ScriptableObject", typeof(Collectable));
       collectables = Resources.FindObjectsOfTypeAll(typeof(Collectable)) as Collectable[];
   }	
	
	
   void Start()
   {
    
   }
   
}
